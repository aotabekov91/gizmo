from PyQt5 import QtCore 
from gizmo.vimo.element import TableElement
from gizmo.vimo.item.mixin import ListWidgetItem
from gizmo.vimo.item.lwidget import BaseListWidget

from .table import TableModel

class WTableModel(TableModel, QtCore.QObject):

    item_class=ListWidgetItem
    element_class=TableElement
    widget_class=BaseListWidget

    def setup(self):

        super().setup()
        self.loaded.connect(self.connect)
        self.elementCreated.connect(self.addItem)

    def addItem(self, e):

        w=self.widget_class(e)
        e.setWidget(w)
        i=self.item_class()
        i.setElement(e)
        self.appendRow(i)

    def appendRow(self, i):

        idx=len(self.m_rows)
        self.m_rows[idx]=i

    def rows(self):
        return self.m_rows

    def connect(self):

        return
        self.rowsAboutToBeRemoved.connect(
                self.on_rowsAboutToBeRemoved)
        self.rowsAboutToBeInserted.connect(
                self.on_rowsAboutToBeInserted)

    def on_rowsAboutToBeRemoved(
            self, p, f, l):

        for j in range(f, l+1):
            idx=self.index(j, 0)
            i=self.itemFromIndex(idx)
            if i:
                e=i.element()
                self.elementRemoveWanted.emit(e)
            
    def on_rowsAboutToBeInserted(
            self, p, f, l):

        for j in range(f, l+1):
            idx=self.index(j, 0)
            i=self.itemFromIndex(idx)
            if i:
                e=i.element()
                self.elementAddWanted.emit(e)

    def index(self, row, col):
        return self.m_rows.get(row, None)

    def rowCount(self):
        return len(self.m_rows) 

    def getRowIndex(self, row):
        return row
